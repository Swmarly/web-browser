// Copyright 2025 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module metrics.private_metrics.mojom;

// An internal structure for storing information for a single private metrics
// entry. Both DWA and DKM builders populate entry information to
// PrivateMetricsEntry, which can then be recorded by either a DwaRecorder or a
// DkmRecorder.
struct PrivateMetricsEntry {
  // A hash of the event name (such as "ReportingAPIUsage").
  // Uses the same hash function as UMA.
  // http://cs.chromium.org/chromium/src/base/metrics/metrics_hashes.cc?q=HashMetricName
  uint64 event_hash;

  // A hash of the content (e.g. hash("example.com")).
  // Uses the same hash function as UMA.
  // This field is used for DWA only.
  // http://cs.chromium.org/chromium/src/base/metrics/metrics_hashes.cc?q=HashMetricName
  uint64? content_hash;

  // A source id that corresponds to a eTLD+1.
  // This field is used for DKM only.
  uint64? source_id;

  // Map of names of field trials of interest. Their values are always true.
  // Since mojom does not support set directly, we use a map to prevent
  // duplicate keys.
  // TODO(https://crbug.com/347223099): We should revisit this in the future
  // to change the type to type-map it to a set.
  map<string,bool> studies_of_interest;

  // Map of metrics and their values that are relevant for this DKM event.
  map<uint64,int64> metrics;

  // The type of metric.
  enum Type {
    kDwa,
    kDkm,
  };
  Type type;
};