# Copyright 2022 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/features.gni")
import("//build/config/ui.gni")

static_library("common") {
  public = [
    "cached_signal.h",
    "common_types.h",
    "platform_utils.h",
    "platform_wrapper.h",
    "signals_constants.h",
  ]

  sources = [
    "common_types.cc",
    "platform_utils.cc",
    "platform_wrapper.cc",
    "signals_constants.cc",
  ]

  public_deps = [ "//third_party/abseil-cpp:absl" ]

  deps = [
    "//base",
    "//components/policy/core/common",
  ]

  if (is_win) {
    sources += [ "win/platform_utils_win.cc" ]
    libs = [
      "propsys.lib",
      "secur32.lib",
    ]
  }

  if (is_mac || is_linux || is_chromeos) {
    sources += [ "posix/platform_utils_posix.cc" ]
  }

  if (is_mac) {
    sources += [ "mac/platform_utils_mac.mm" ]
    deps += [ ":features" ]
  }

  if (is_linux || is_chromeos) {
    if (use_glib) {
      deps += [ "//ui/base/glib" ]
    }
    sources += [ "linux/platform_utils_linux.cc" ]
  }

  # platform_utils_linux uses a "defined(USE_GIO)" macro, so if it's refactored
  # away from this file make sure gio_config is still added to configs.
  if (use_gio) {
    configs += [ "//build/linux:gio_config" ]
  }

  # TODO(crbug.com/40031409): Fix code that adds exit-time destructors and
  # enable the diagnostic by removing this line.
  configs += [ "//build/config/compiler:no_exit_time_destructors" ]
}

source_set("features") {
  public = [ "signals_features.h" ]

  sources = [ "signals_features.cc" ]

  public_deps = [ "//base" ]
}

source_set("unit_tests") {
  testonly = true

  sources = []
  deps = []

  if (is_win || is_mac || is_linux || is_chromeos) {
    sources += [ "platform_utils_unittest.cc" ]

    deps += [
      ":common",
      ":test_support",
      "//base",
      "//base/test:test_support",
      "//testing/gmock",
      "//testing/gtest",
    ]
  }
}

source_set("test_support") {
  testonly = true

  public = [ "scoped_platform_wrapper.h" ]

  sources = [ "scoped_platform_wrapper.cc" ]

  public_deps = [
    ":common",
    "//base",
    "//testing/gmock",
  ]
}
