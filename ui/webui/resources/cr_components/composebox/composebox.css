/* Copyright 2025 The Chromium Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file. */

/* #css_wrapper_metadata_start
 * #type=style-lit
 * #import=//resources/cr_elements/cr_icons_lit.css.js
 * #scheme=relative
 * #include=cr-icons-lit
 * #css_wrapper_metadata_end */

:host {
  --input-bottom-spacing: 10px;
  --text-input-top-spacing: 10px;
  --text-input-inline-end-spacing: 80px;
  --text-input-inline-start-spacing: 16px;
  --expanded-border-radius: 26px;
  --brand-gradient: conic-gradient(
    rgba(52, 168, 82, 0) 0deg,
    rgba(52, 168, 82, 1) 38.9738deg,
    rgba(255, 211, 20, 1) 62.3678deg,
    rgba(255, 70, 65, 1) 87.0062deg,
    rgba(49, 134, 255, 1) 107.428deg,
    rgba(49, 134, 255, 0.5) 204.48deg,
    rgba(49, 134, 255, 0) 308.88deg,
    rgba(52, 168, 82, 0) 360deg
  );
  --standard-curve: cubic-bezier(0.4, 0, 0.2, 1);
  --gradient-curve: cubic-bezier(0.2, 0, 0, 1);
  --emphasized-accelerate: cubic-bezier(0.3, 0, 0.8, 0.15);
  --emphasized-curve: linear(
    0,
    0.002,
    0.01 3.6%,
    0.02 4.9%,
    0.034,
    0.053,
    0.074,
    0.1,
    0.128,
    0.16,
    0.194 13.4%,
    0.271 15%,
    0.344 16.1%,
    0.477 17.5%,
    0.544 18.3%,
    0.607,
    0.66 20.6%,
    0.717 22.4%,
    0.742,
    0.765,
    0.788,
    0.808,
    0.827,
    0.845 30.4%,
    0.865 32.6%,
    0.866,
    0.865 32.7%,
    0.869 33.1%,
    0.883 35.1%,
    0.9 37.7%,
    0.916 40.6%,
    0.929 43.8%,
    0.942 47.2%,
    0.953 51%,
    0.963 55%,
    0.972 59.3%,
    0.979 64%,
    0.986 69%,
    0.991 74.4%,
    0.998 86.4%,
    1
  );

  --start-angle-open: 30deg;
  --end-angle-open: 245deg;
  --start-angle-submit: 200deg;
  --end-angle-submit: 330deg;

  --glow-stroke-width: 2px;

  --glif-rotation-duration: 1000ms;

  --icon-entry-transition: opacity var(--expand-ease-out-duration) linear 800ms;
  --icon-exit-transition: opacity var(--collapse-ease-in-duration)
    var(--emphasized-accelerate);

  --height-expand-duration: 600ms;
  --submit-enabled-transition: opacity 255ms;

  --border-radius-transition: border-radius var(--collapse-duration)
    var(--emphasized-curve);

  --lens-icon-animation-duration: 1100ms;

  border-radius: 30px;
  box-shadow: var(--cr-searchbox-shadow);
  font-size: var(--cr-composebox-font-size, 18px);
  transition: var(--border-radius-transition);
  width: var(--ntp-composebox-width, 337px);
}

:host(:not([ntp-realbox-next-enabled])) {
  --expand-ease-in-duration: 400ms;
  --expand-delay: 300ms;
  --expand-ease-out-duration: 300ms;
  --expand-duration: calc(
    var(--expand-ease-in-duration) + var(--expand-delay) +
      var(--expand-ease-out-duration)
  );
  --collapse-ease-in-duration: 100ms;
  --collapse-ease-out-duration: 500ms;
  --collapse-duration: calc(
    var(--collapse-ease-in-duration) + var(--collapse-ease-out-duration)
  );
}

:host([ntp-realbox-next-enabled]) {
  --input-bottom-spacing: 12px;
}

:host([expanded_]) {
  border-radius: var(--expanded-border-radius);
}

#errorScrim {
  border-radius: inherit;
}

#composebox {
  display: flex;
  pointer-events: auto;
  position: relative;
  overflow: hidden;
}

:host([is-collapsible]) #composebox {
  transition:
    min-height var(--emphasized-curve),
    max-height var(--emphasized-curve);
  transition-duration: var(--collapse-duration);
  min-height: 60px;
  max-height: 60px;
}

:host(:not([is-collapsible])) #composebox {
  /* If the composebox is not expandable, meaning expanded_ is always true,
   * then the above transition will never be triggered. Instead, manually
   * start the animation so it expands as soon as it is rendered */
  height: 60px;
}

:host([expanded_]) #composebox {
  height: calc-size(auto, size);
  max-height: 422px;
  transition-duration: var(--expand-duration);
}

:host([is-collapsible][expanded_]) #composebox {
  min-height: 136px;
  max-height: 254px;
}

#inputContainer {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  padding-bottom: var(--input-bottom-spacing);
  overflow: hidden;
  width: 100%;
}

#textContainer {
  display: flex;
  flex-direction: row;
  padding-block: 8px 0;
  padding-inline: var(--text-input-inline-start-spacing) 0;
}

#iconContainer {
  --text-input-top-spacing: 8px;
  align-items: center;
  display: flex;
  height: 48px;
  justify-content: center;
}

#aimIcon {
  -webkit-mask-image: url(//resources/cr_components/searchbox/icons/search_spark.svg);
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: cover;
  background-color: var(--color-new-tab-page-composebox-input-icon);
  height: 24px;
  width: 24px;
}

@media (forced-colors: active) {
  #aimIcon {
    background-color: Highlight;
    border-radius: 4px;
  }
}

#inputWrapper {
  position: relative;
  width: 100%;
}

#input,
#smartCompose {
  box-sizing: border-box;
  font-family: inherit;
  font-size: inherit;
  line-height: 24px;
  min-height: 48px;
  max-height: 190px;
  padding-block: var(--text-input-top-spacing) 0;
  padding-inline: 12px var(--text-input-inline-end-spacing);
  scrollbar-width: none;
  width: 100%;
}

:host(:not[ntp-realbox-next-enabled]) #input {
  transition: padding var(--height-expand-duration) var(--standard-curve);
}

#input {
  animation: color-change 5s infinite;
  background-color: inherit;
  border: none;
  caret-color: var(--google-blue-500);
  color: var(--color-new-tab-page-composebox-font-light);
  field-sizing: content;
  mask-image: linear-gradient(transparent 7px, black calc(var(--text-input-top-spacing) + 7px));
  height: calc-size(fit-content, min(size + 4px, 190px));
  outline: none;
  position: relative;
  resize: none;
}

#input::placeholder {
  color: var(--color-new-tab-page-composebox-type-ahead);
}

#smartCompose {
  pointer-events: none;
  position: absolute;
  overflow: scroll;
  top: 0;
  left: 0;
}

:host(:not([smart-compose-enabled_])) #smartCompose {
  display: none;
}

#invisibleText {
  color: transparent;
  white-space: pre-wrap;
}

#ghostText {
  color: var(--color-new-tab-page-composebox-type-ahead);
  white-space: pre-wrap;
}

#tabChip {
  align-items: center;
  border: 1px solid var(--color-new-tab-page-composebox-type-ahead-chip);
  border-radius: 8px;
  box-sizing: border-box;
  color: var(--color-new-tab-page-composebox-type-ahead-chip);
  font-size: 12px;
  font-weight: 700;
  line-height: 28px;
  margin-left: 4px;
  padding: 6px 8px;
}

:host([expanded_]) #input,
:host([expanded_]) #smartCompose {
  --text-input-top-spacing: 12px;
}

:host([expanded_][is-collapsible]) #input {
  --text-input-top-spacing: 24px;
}

@keyframes color-change {
  0%, 100%   { caret-color: var(--google-blue-500); }
  25% { caret-color: var(--google-red-500); }
  50%  { caret-color: var(--google-yellow-500); }
  75% { caret-color: var(--google-green-500); }
}

#input::-webkit-search-decoration,
#input::-webkit-search-results-button,
#input::-webkit-search-results-decoration,
#input::-webkit-search-cancel-button{
  display: none;
}

:host([expanded_][show-dropdown_]) ntp-composebox-dropdown {
  padding-bottom: 8px;
}

.action-icon {
  --cr-icon-button-focus-outline-color:
      var(--color-searchbox-results-icon-focused-outline);
  --cr-icon-button-hover-background-color:
      var(--color-searchbox-results-background-hovered);
  --cr-icon-button-margin-end: 0;
  --cr-icon-button-size: 40px;
  position: absolute;
  right: 16px;
}

:host-context([dir='rtl']) .action-icon {
  left: 16px;
  right: unset;
}

#cancelIcon {
  --cr-icon-button-fill-color:
      var(--color-new-tab-page-composebox-cancel-button-light);
  /* SVG is size 20 with 5px of padding so actual size is 10px */
  --cr-icon-button-icon-size: 20px;
  position: absolute;
  top: 8px;
  /* Uses the same transitions as the submit button so they are in sync. */
  transition: var(--submit-enabled-transition);
}

:host([expanded_][is-collapsible]) #cancelIcon {
  top: 16px;
}

/* Hide the cancel icon when the composebox is expanded and no text is present. */
:host([is-collapsible]:not([submit-enabled_])) #cancelIcon {
  opacity: 0;
  pointer-events: none;
}

@keyframes fade-out-in {
  0% {
    opacity: 0;
  }

  73% {
    opacity: 0;
  }
}

#lensIcon {
  --cr-icon-button-icon-size: 20px;
  --cr-icon-image: url(//resources/cr_components/searchbox/icons/camera.svg);
  bottom: var(--input-bottom-spacing);
  display: none;
  opacity: 1;
  position: absolute;
  right: 16px;
  top: 6px;
}

#lensIcon:focus-visible:focus {
  box-shadow: none;
  outline: 2px solid var(--color-searchbox-results-icon-focused-outline);
  outline-offset: 2px;
}

:host([expanded_]) #lensIcon {
  animation: fade-out-in var(--lens-icon-animation-duration) linear;
  right: 68px;
  top: auto;
}

:host([lens-button-disabled_]) #lensIcon {
  opacity: 0.3;
}

:host-context([dir='rtl']) #lensIcon {
  left: 68px;
  right: unset;
}

:host(:not([show-submit_])) #submitContainer,
:host([ntp-realbox-next-enabled]) #submitContainer,
:host([show-submit_]:not([submit-enabled_])) #submitContainer{
  display: none;
}

#submitIcon {
  --cr-icon-button-fill-color: white;
  --cr-icon-button-icon-size: 16px;
  background-color: var(--color-new-tab-page-composebox-submit-button);
  bottom: var(--input-bottom-spacing);
  cursor: default; /* For Lens side panel. */
  opacity: 30%; /* For Lens side panel. */
  transition: var(--submit-enabled-transition);
}

#submitIcon:focus-visible:focus {
  box-shadow: none;
  outline: 2px solid var(--color-searchbox-results-icon-focused-outline);
  outline-offset: 2px;
}

:host([show-submit_][submit-enabled_]:not([ntp-realbox-next-enabled])) #submitIcon {
  cursor: pointer;
  display: block;
  opacity: 100%; /* For Lens side panel. */
}

/* Controls the opacity of the icons when the composebox is expanded/collapsed. */
.icon-fade {
  opacity: 0;
  transition: var(--icon-exit-transition);
}

:host([expanded_]) .icon-fade {
  opacity: 1;
  transition: var(--icon-entry-transition);
}

@media (forced-colors: active) {
  :host,
  .action-icon {
    border: solid var(--color-new-tab-page-composebox-outline-hcm);
  }
}

.gradient {
  border-radius: inherit;
  contain: paint;
  inset: 0;
  position: absolute;
}

.gradient.gradient-outer-glow {
  animation: blur-open var(--glif-rotation-duration)
    var(--standard-curve);
}

@keyframes blur-open {
  17% {
    filter: blur(30px);
    opacity: 17.5%
  }
}

.gradient:before {
  aspect-ratio: 1 / 1;
  background: var(--brand-gradient);
  border-radius: 50%;
  contain: paint;
  content: '';
  height: auto; /* Controlled by aspect-ratio */
  left: 50%;
  position: absolute;
  rotate: 0deg;
  scale: 1 0.6;
  top: 50%;
  translate: -50% -50%;
  opacity: 0;
  /* The gradient is 120% wide to ensure it fills passed the entire container. */
  width: 120%;
}

:host([expanded_]) .gradient:before {
  animation: gradient-spin-expand var(--glif-rotation-duration)
    var(--gradient-curve) forwards;
}

@keyframes gradient-spin-expand {
  0% {
    opacity: 0;
    transform: rotate(var(--start-angle-open));
  }
  17% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: rotate(var(--end-angle-open));
  }
}

:host([submitting_]) .gradient:before,
:host([submitting_]) .gradient.gradient-outer-glow:before {
  animation: gradient-spin-submit var(--glif-rotation-duration)
    var(--gradient-curve) forwards;
}

:host([submitting_]) .gradient.gradient-outer-glow {
  animation: blur-close var(--glif-rotation-duration)
    var(--gradient-curve);
}

@keyframes blur-close {
  17% {
    filter: blur(30px);
    opacity: 17.5%;
  }
}

@keyframes gradient-spin-submit {
  0% {
    opacity: 0;
    transform: rotate(var(--start-angle-submit));
  }
  17% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: rotate(var(--end-angle-submit));
  }
}

.background {
  animation: gradient-border-width var(--glif-rotation-duration)
    var(--standard-curve);
  border: 0 solid transparent;
  border-radius: inherit;
  contain: paint;
  inset: 0;
  position: absolute;
}

@keyframes gradient-border-width {
  0% {
    border-width: 0;
  }
  17% {
    border-width: var(--glow-stroke-width);
  }
  100% {
    border-width: 0;
  }
}

.background:before {
  background: var(--ntp-composebox-background-color);
  border-radius: inherit;
  content: '';
  contain: paint;
  inset: 0;
  position: absolute;
  filter: blur(0);
}

:host([expanded_]) .background:before {
  animation: plate-background-blur-on-expand var(--glif-rotation-duration)
      var(--standard-curve);
}

:host([expanded_][is-collapsible]) .background:before {
  animation: color-pulse-on-expand var(--expand-duration) var(--standard-curve);
}

@keyframes plate-background-blur-on-expand {
  0% {
    filter: blur(0);
  }
  17% {
    filter: blur(2px);
  }
  100% {
    filter: blur(0);
  }
}

@keyframes color-pulse-on-expand {
    40% {
        background: var(--color-new-tab-page-composebox-scrim-background);
    }
    58% {
        background: var(--color-new-tab-page-composebox-scrim-background);
    }
}

:host([expanded_]) .background,
:host([submitting_]) .background {
  animation: gradient-border-width-close var(--glif-rotation-duration)
    var(--standard-curve);
}

@keyframes gradient-border-width-close {
  0% {
    border-width: 0;
  }
  17% {
    border-width: var(--glow-stroke-width);
  }
  100% {
    border-width: 0;
  }
}

#suggestionActivity {
  color: var(--color-new-tab-page-composebox-suggestion-activity);
  font-size: 12px;
  font-weight: 400;
  left: 50%;
  line-height: 18px;
  margin-top: 20px;
  position: absolute;
  transform: translate(-50%);
}

.carousel-divider {
  border-radius: 100px;
  border-top: 1px solid
    var(--color-new-tab-page-composebox-file-carousel-divider);
  margin-inline-end: 16px;
  margin-inline-start: var(--text-input-inline-start-spacing);
  margin-top: 8px;
  margin-bottom: 10px;
}

:host([ntp-realbox-next-enabled][realbox-layout-mode="Compact"]) #iconContainer {
  display: none;
}

:host([ntp-realbox-next-enabled][realbox-layout-mode="Compact"]) #textContainer {
  --text-input-inline-start-spacing: 40px;
}

:host([ntp-realbox-next-enabled]) #input,
:host([ntp-realbox-next-enabled]) #smartCompose {
  --text-input-top-spacing: 14px;
}

:host([ntp-realbox-next-enabled][realbox-layout-mode="Compact"]) #input,
:host([ntp-realbox-next-enabled][realbox-layout-mode="Compact"]) #smartCompose {
  --text-input-top-spacing: 8px;
}

:host([ntp-realbox-next-enabled][realbox-layout-mode="Compact"]) #context {
  margin-top: -48px;
}

:host([expanded_][show-dropdown_][ntp-realbox-next-enabled][realbox-layout-mode="Compact"]) ntp-composebox-dropdown {
  padding-bottom: 0;
  padding-top: 8px;
}

:host-context([realbox-layout-mode='TallTopContext']) contextual-entrypoint-and-carousel::part(carousel-divider) {
  margin-top: 10px;
}
